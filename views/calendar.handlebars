<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agenda de Eventos</title>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script> <!-- Adicionando Moment.js -->
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Minha Agenda</a>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/profile">Perfil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/agendamento">Agendar Evento</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-4">
        <h1 class="text-center">Agenda de Eventos</h1>
        <div id="calendar"></div>
    </div>

    <!-- Modal para Detalhar Evento -->
    <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Detalhes do Evento</h5>
                    <button type="button" class="close" id="closeModal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Serviço:</strong> <span id="eventTitle"></span></p>
                    <p><strong>Profissional:</strong> <span id="eventprofessionalName"></span></p>
                    <p><strong>Data:</strong> <span id="eventStart"></span></p>
                    <p><strong>Horário:</strong> <span id="eventHora"></span></p>
                    <p><strong>Agendado por:</strong> <span id="eventUser"></span></p>
                    <p><strong>Email:</strong> <span id="eventUserEmail"></span></p>
                    <p><strong>Telefone:</strong> <span id="eventUserPhone"></span></p>
                    <div class="form-group">
                        <label for="newEventDate">Nova Data:</label>
                        <input type="date" class="form-control" id="newEventDate">
                    </div>
                    <div class="form-group">
                        <label for="newEventHour">Novo Horário:</label>
                        <input type="time" class="form-control" id="newEventHour">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="editEvent">Alterar Data</button>
                    <button type="button" class="btn btn-danger" id="deleteEvent">Deletar Evento</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: '/events', // Rota que fornece os eventos
                eventClick: function(info) {
                    document.getElementById('eventTitle').innerText = info.event.title;
                    document.getElementById('eventprofessionalName').innerText = info.event.extendedProps.professionalName || 'Desconhecido';
                    document.getElementById('eventStart').innerText = info.event.start.toLocaleString();
                    document.getElementById('eventHora').innerText = info.event.extendedProps.hora || 'Desconhecido'; // Corrigido para "extendedProps"
                    document.getElementById('eventUser').innerText = info.event.extendedProps.user.nome || 'Desconhecido';
                    document.getElementById('eventUserEmail').innerText = info.event.extendedProps.user.email || 'N/A';
                    document.getElementById('eventUserPhone').innerText = info.event.extendedProps.user.telefone || 'N/A';

                    $('#eventModal').modal('show');

                    // Função para deletar o evento
                    document.getElementById('deleteEvent').onclick = function() {
                        if (confirm('Deseja realmente deletar este evento?')) {
                            fetch(`/delete-event/${info.event.id}`, {
                                method: 'DELETE'
                            }).then(() => {
                                info.event.remove();
                                $('#eventModal').modal('hide');
                            });
                        }
                    };

                    // Função para editar evento
                    document.getElementById('editEvent').onclick = async function() {
                        const newStart = document.getElementById('newEventDate').value;
                        const newHour = document.getElementById('newEventHour').value;

                        if (newStart && newHour) {
                            // Combine a nova data e horário
                            const newStartDateTime = moment(`${newStart}T${newHour}`).format(); // Use "T" para o formato ISO

                            try {
                                const response = await fetch(`/edit-event/${info.event.id}`, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        title: info.event.title,
                                        start: newStartDateTime,
                                    }),
                                });

                                if (response.ok) {
                                    info.event.setStart(newStartDateTime); // Atualiza a data do evento
                                    $('#eventModal').modal('hide'); // Fecha o modal
                                    alert('Evento atualizado com sucesso!');
                                } else {
                                    throw new Error('Erro ao atualizar o evento');
                                }
                            } catch (error) {
                                console.error('Erro:', error);
                                alert('Erro ao atualizar o evento. Verifique o console para mais detalhes.');
                            }
                        } else {
                            alert('Por favor, preencha a nova data e o novo horário.');
                        }
                    };
                }
            });

            calendar.render();

            // Função para fechar o modal
            document.getElementById('closeModal').onclick = function() {
                $('#eventModal').modal('hide');
            };
        });
    </script>
</body>
</html>
